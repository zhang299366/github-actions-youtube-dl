name: BT

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: download
        run: |
          sudo apt-get update
          sudo apt-get install tar wget -y
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git pull --rebase
          wget https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz
          tar zxvf aria2-1.35.0.tar.gz
          cd aria2-1.35.0
          ./configure
          ./make
          ./src/aria2c 'magnet:?xt=urn:btih:2c623a579394b5afa55bcad6cd1df90c97687310&dn=%e9%98%b3%e5%85%89%e7%94%b5%e5%bd%b1www.ygdy8.com.%e6%8b%86%e5%bc%b9%e4%b8%93%e5%ae%b62.HD.1080p.%e5%9b%bd%e8%af%ad%e4%b8%ad%e5%ad%97.mkv&tr=udp%3a%2f%2ftracker.opentrackr.org%3a1337%2fannounce&tr=udp%3a%2f%2fexplodie.org%3a6969%2fannounce&tr=udp%3a%2f%2fexodus.desync.com%3a6969%2fannounce'
          echo "Build Success"
          zip -s 1984m downloaded.zip ./*.mkv
          cat "play.list" >> body.md
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release ${{ github.ref }}
          body_path: body.md
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ./downloaded.*
